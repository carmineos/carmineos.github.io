@page "/cineforum"
@inject HttpClient Http

<PageTitle>Cineforum</PageTitle>

<h1>Cineforum</h1>
<div>
    I host a cineforum with a group of friends weekly. This is a simple page to track the movies we watch together.
</div>

@if (seasons == null)
{
    <Spinner Visible="true" />
}
else
{
    <SearchBox placeholder="Search..." SearchQueryChanged="Search" />

    <span class="text-muted">
        Results: @TotalMovies
    </span>

    @if(filteredSeasons is not null)
    {
        foreach (var list in filteredSeasons)
        {
            <MoviesListTable List="@list" />
        }
    }
}

@code {
    IEnumerable<Season>? seasons;

    IEnumerable<Season>? filteredSeasons;

    int TotalMovies => filteredSeasons?.Sum(m => m.Movies.Length) ?? 0;

    protected override async Task OnInitializedAsync()
    {
        seasons = await Http.GetFromJsonAsync<IEnumerable<Season>>("sample-data/cineforum.json");
        filteredSeasons = seasons;
    }

    async Task Search(string query)
    {
        if (string.IsNullOrEmpty(query))
        {
            filteredSeasons = seasons;
            return;
        }

        var searchTerm = query.ToLower();

        await Task.Run(() =>
        {
            filteredSeasons = seasons?.Select(list => new Season()
            {
                SeasonId = list.SeasonId,
                Movies = list.Movies.Where(m =>
                    (m.OriginalTitle != null && m.OriginalTitle.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) ||
                    (m.TitleIT != null && m.TitleIT.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) ||
                    (m.Directors != null && m.Directors.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                    ).ToArray()
            }).Where(list => list.Movies.Any()).ToList();
        });
    }
}
